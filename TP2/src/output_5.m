% 
% load('TimeSerie_G1.mat');
% dataset_2 = [];
% x = x ./ 4;
% 
% inputs = 3;
% 
% for i=1:800
%   dataset_2 = [dataset_2, x(i:i+inputs - 1)'];
% end
% expected_2 = x(inputs + 1:size(dataset_2, 2) + inputs);
% 
% cap = 0.6;
% error_cap = 0.005;
% W = learn(dataset_2, expected_2, get_random_w([inputs 14 8 1], cap), 0.2, @tanh, @(x)(sech(x).^2), 0.3, error_cap);
% 

load('TimeSerie_G1.mat');
test_set = [];
x = x ./ 4;

inputs = 3;
start = 800;

for i=start:size(x, 2) - inputs - 1
  test_set = [test_set, x(i:i+inputs-1)'];
end
expected_values = x(start + inputs:start + inputs + size(test_set, 2));

W = {};

W.A = [ 0.0337    0.5539   -0.3286   -0.2641 ;
    0.0156    0.9169   -1.0378   -1.4530 ;
    0.6639    1.2131   -1.9095    1.8079 ;
   -0.0399   -1.9453    1.2256   -2.0235 ;
   -0.5201    4.3981   -2.7522   -2.8249 ;
   -0.0594    0.3965   -0.6374   -0.2849 ;
    0.0492   -2.7934    2.6559   -1.4478 ;
   -0.0355   -4.0216    4.0068    0.7211 ;
    0.1719    3.4771   -4.5401   -3.7564 ;
   -0.5671    1.2939   -1.7508    1.9737 ;
    0.0831    0.3505   -0.5339    0.1513 ;
   -0.0844    0.7007   -0.2415   -0.2430 ;
    0.0530    0.1759   -0.5024   -0.1230 ;
   -0.0385   -2.9565    3.0281   -1.2290 ];

W.B = [ 0.1791    0.6011    0.0869   -0.1365   -0.5564    0.1306    0.6445   -0.4668   -0.2784    0.1044    0.1529    0.1889    0.1883    0.4648    0.0880 ;
    0.2559    0.4793   -0.3313    0.3027    0.0572    0.3341   -0.3657    0.9234   -0.3972   -0.2051    0.0409    0.3322    0.2276   -0.3491    0.4309 ;
    0.3341    1.2338    0.1318   -0.1097   -0.8620    0.6764    0.4990   -0.4563   -0.8364    0.1199    0.3383    0.3679    0.4092    0.6130    0.3212 ;
    0.6709    0.9329    1.2289   -1.7080   -3.7620    0.5362   -1.4481   -1.3323   -3.8770    1.6225    0.7728    0.9193    0.2414   -1.2764   -2.5596 ;
    0.3406    0.1495    0.0017   -0.2494   -0.1500    0.0141    0.3232    0.0729   -0.0983   -0.0229   -0.0576    0.4565   -0.1921    0.2279   -0.0782 ;
    0.0134   -0.0026   -0.7629    1.4103    0.7051   -0.2072   -1.1759    2.2089   -0.0677   -0.8704   -0.6184   -0.5091    0.0482   -1.5139   -0.5102 ;
    0.1921   -0.1968    0.5327   -0.7219    1.3120    0.0615    0.4120   -0.4564    1.3610    0.4759   -0.0292    0.5119   -0.2033    0.6964    1.1197 ;
   -0.1672   -0.1566   -0.7224    1.0427    0.1063   -0.1895    0.8659   -2.3465   -0.5159   -0.9516   -0.5568   -0.6988   -0.0315    0.5258    1.0872 ];

W.C = [ 0.3277    0.7213    0.9099    1.3338    0.1564   -0.9271    0.6631    1.6949   -0.2270 ];

name = lvl(size(fieldnames(W), 1) + 1);
err = [];
for i = 1 : size(test_set, 2)
  out = run_neural_network(W, test_set(:,i), @tanh);
  err = [err norm(out.V.(name) - expected_values(i))];
end

figure(1); plot(err);
disp(mean(err));
