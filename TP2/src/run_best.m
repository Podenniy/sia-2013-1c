args = argv();

input_file = args{1};
load(input_file);
test_set = [];
x = x ./ 4;
for i=1:size(x, 2) - 3
  test_set = [test_set, x(i:i+1)'];
end
expected_values = x(3:size(x, 2));

W = {};

W.A = [
    -3.4874      3.4754    -0.70205;
    -3.2866      3.2882     -3.6674;
    -0.58992     0.65784     0.52301;
    -2.978      2.9792      1.3359;
    -1.2859      1.2272      1.8659;
    1.7576     -1.7844     0.93057;
    -0.55123     0.50248    -0.10265;
    -1.2405      1.2519      1.8749;
    -3.6837      3.6945      3.2991;
];
W.B = [
    0.57625    -0.40647    -0.59412    -0.65001    -0.98878    0.013836    0.078408    -0.52262      1.3119    0.025545;
    -0.12641    -0.06372   -0.043633    0.038018     0.44674    -0.18376  -0.0027433    -0.45309   0.0058302    0.017965;
    1.2409      3.7211    0.072332      1.7889    0.096589    -0.27473     0.40942    0.080554     0.65186      -1.099;
    -0.18825     -3.1864     0.17709      0.3644     0.86293       1.049      -0.442     0.67077      3.7582      -1.231;
    -2.1044    -0.06127     0.26399   -0.074733     0.37028      1.2794    0.082325     0.27133     -2.8768    -0.16595;
    -0.40887     0.41026    0.019237     0.46289     0.14948     0.26032     0.25095   -0.029329    -0.46299     0.13458;
    0.38395    -0.80607    -0.33958    -0.49962    -0.78665    -0.55007    -0.23809      -1.021      1.4587  -0.0012496;
    -1.2129       1.623     0.75481     0.51638      1.3401     0.46176     0.93317       1.352     -1.9299   -0.094158;
];
W.C = [
    0.61961 -0.00041285      1.4745      1.3663       1.379    -0.18331     0.60201     -1.0259     0.58072;
];


name = char('@' + size(fieldnames(W), 1) + 1);
err = [];
for i = 1 : size(test_set, 2)
  out = run_neural_network(W, test_set(:,i), @tanh);
  err = [err norm(out.V.(name) - expected_values(i))];
end

figure(1); plot(err);

disp(['Mean error ' num2str(mean(err))]);
disp(['Error standard deviation ' num2str(std(err))]);
disp(['Max error ' num2str(max(err))]);

